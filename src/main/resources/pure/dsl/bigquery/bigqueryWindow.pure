// Copyright 2025 Neema Raphael
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import meta::pure::dsl::dataframe::*;
import meta::pure::dsl::dataframe::metamodel::*;
import meta::pure::dsl::dataframe::metamodel::window::*;
import meta::pure::dsl::bigquery::*;

// Generate SQL for window functions
function meta::pure::dsl::bigquery::generateBigQueryWindowFunction(func: WindowFunction[1]): String[1]
{
   meta::pure::dsl::dataframe::generateWindowFunctionSQL($func, {e | generateBigQueryExpression($e)}, {w | generateBigQueryWindowSpec($w)});
}

// Generate SQL for window specifications
function meta::pure::dsl::bigquery::generateBigQueryWindowSpec(windowSpec: Window[1]): String[1]
{
   meta::pure::dsl::dataframe::generateWindowSpecSQL($windowSpec, {e | generateBigQueryExpression($e)});
}

// Generate SQL for _Window specifications
function meta::pure::dsl::bigquery::generateWindowSpecSQL(windowSpec: _Window<Any>[1]): String[1]
{
   // Use central implementation
   meta::pure::dsl::dataframe::generateWindowSpecSQL($windowSpec, {e | generateBigQueryExpression($e)});
}

// Generate SQL for window frames
function meta::pure::dsl::bigquery::generateFrameSQL(frame: Frame[1]): String[1]
{
   // Use central implementation
   meta::pure::dsl::dataframe::generateFrameSQL($frame);
}

// Generate SQL for frame values
function meta::pure::dsl::bigquery::generateFrameValueSQL(frameValue: FrameValue[1]): String[1]
{
   // Use central implementation
   meta::pure::dsl::dataframe::generateFrameValueSQL($frameValue);
}
